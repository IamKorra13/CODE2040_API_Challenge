#Ashley Collins
#API Challege
#
#
#
import requests
payload = {'email' : 'a.collins05@berkeley.edu', 'github': 'https://github.com/IamKorra13/CODE2040_API_Challenge.git'}
r = requests.post("http://challenge.code2040.org/api/register", json=payload)
r.text
#"u'{"result":"kB9m2JfOPy"}\n'"
#token is kB9m2JfOPy

#######################################
#               Stage I
#######################################
stageI = {'token' : 'kB9m2JfOPy'}
getString = requests.post("http://challenge.code2040.org/api/getstring", json=stageI)
getString.text
#   u'{"result":"hEiWP"}\n'
token = "hEiWP"


"""Return the reverse of the given string."""
def reverseString(strg):
	newString = ""
	length = len(strg)
	for i in xrange(length):
	#for char in strg:
		newString += strg[length - 1 - i]
	return newString

answer = reverseString(token)
print(answer)
answerStgI = {'token' : 'kB9m2JfOPy', 'string' : answer}
getAnswer = requests.post("http://challenge.code2040.org/api/validatestring", json=answerStgI)
getAnswer.text
#u'{"result":"PASS: stage1. Enrollment record updated!"}\n'


#######################################
#				Stage II
#######################################
myToken = {'token' : 'kB9m2JfOPy'}
StageII = requests.post("http://challenge.code2040.org/api/haystack", json=myToken)
StageII.text
#u'{"result":{"haystack":["PcQ01","AetkU","hXzgB","WD9xl","62Bg7","TJwOk","5GOKv","iUg2D","QuJDG","eqYaH","oEa2B","RWRu1","HVls2","aQFeB","BMA2i","63tsL","mTK2q","TdRQD","aQxvL","gBJIE"],"needle":"oEa2B"}}\n'

task = {"haystack":["PcQ01","AetkU","hXzgB","WD9xl","62Bg7","TJwOk","5GOKv","iUg2D","QuJDG","eqYaH","oEa2B","RWRu1","HVls2","aQFeB","BMA2i","63tsL","mTK2q","TdRQD","aQxvL","gBJIE"],"needle":"oEa2B"}


"""Search for the needle in the 'haystack'. """
def searchDict(dict):
	objective = dict['needle']
	for i in xrange(len(dict['haystack'])):
#	for value in dict['haystack']:
		if dict['haystack'][i] == objective:
			return i

index = searchDict(task)
print(index)
results = {'token' : 'kB9m2JfOPy', 'needle' : index}
resultStageII = requests.post("http://challenge.code2040.org/api/validateneedle", json=results)
resultStageII.text
#u'{"result":"PASS: stage2. Enrollment record updated!"}\n'


########################################
#				Stage III
########################################
StageIII = requests.post("http://challenge.code2040.org/api/prefix", json=myToken)
StageIII.text
#u'{"result":{"array":["313kV38o","749SZEZb","150Gem7Y","749Fm7Kl","15064Zyr","749oI2yo"],"prefix":"749"}}\n'

prefixDict = {"array":["313kV38o","749SZEZb","150Gem7Y","749Fm7Kl","15064Zyr","749oI2yo"],"prefix":"749"}


"""Return a new array with entries without the given prefix."""
def removePrefixes(dict):
	newArray = []
	prefix = dict['prefix']
	lenPrefix =  len(prefix)
	for string in dict['array']:
		if (string[0:lenPrefix] != prefix):#!(string.contains(prefix)):
			newArray.append(string)
	return newArray

answer = removePrefixes(prefixDict)
print(answer)

resultsIII = {'token' : 'kB9m2JfOPy', 'array' : answer}
resultStageIII =  requests.post("http://challenge.code2040.org/api/validateprefix", json=resultsIII)
resultStageIII.text
#u'{"result":"PASS: stage3. Enrollment record updated!"}\n'


#######################################
#				Stage IV
#######################################
import datetime
import timedelta
import dateutil.parser
StageIV = requests.post("http://challenge.code2040.org/api/time", json=myToken)
StageIV.text
#u'{"result":{"datestamp":"2006-03-16T04:26:00.000Z","interval":362622622}}\n'
datTimeDict = {"datestamp":"2006-03-16T04:26:00.000Z","interval":362622622}

def addSeconds(dict):
	date = dateutil.parser.parse(dict['datestamp'])
	newDate = date + timedelta(seconds=dict['interval'])
	form = "%Y-%m-%dT%H:%M:%S.%f%z"
	return newDate.strftime(form)[:-8]+'Z'

answer = addSeconds(datTimeDict)
print(answer)

resultsIV = {'token' : 'kB9m2JfOPy', 'datestamp' : answer}
resultStageIV = requests.post("http://challenge.code2040.org/api/validatetime", json=resultsIV)
StageIV.text
#u'{"result":"PASS: stage4. Enrollment record updated!"}\n'


